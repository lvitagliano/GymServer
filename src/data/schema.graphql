scalar Date

# LOS ENUMS
enum Profile {
  Alumno
  Profesor
  Admin
}

enum Gender {
  Masculino
  Femenino
}


# LOS TYPES
type User {
  _id: ID
  email: String
  firstName: String
  lastName: String
  phone: String
  nac: String
  gender: Gender
  profile: Profile
  weightStart: Float
  weightActual: Float
  password: String
  createdOn: Date
  modifiedOn: Date
}

type Muscle {
  _id: ID
  description: String
  image: String
  createdOn: Date
  modifiedOn: Date
}

type Exercise {
  _id: ID
  name: String
  description: String
  muscle: [Muscle]
  image: String
  createdOn: Date
  modifiedOn: Date
}

type Serie {
  _id: ID
  weight: Float 
  exercise: Exercise
  repeats: Int
  pause: Int
  break: Int
  numberSerie: Int
  numberDay: Int
  rutine: ID
  timer: Int
}

type Routine {
  _id: ID
  description: String
  student: [User]
  teacher: User
  series: Int
  rutineDay: [DayForRutine]
  start: String
  finish: String
  period: String
  days: Int
  createdOn: Date
  modifiedOn: Date
}

type SeriesForDay {
  _id: ID
  serie: Serie
  dayForRutine: DayForRutineDo
  doIt: Int
  createdOn: Date
  modifiedOn: Date
}

type DayForRutine {
  _id: ID
  numberDay: Int
  rutine: Rutine
  serieforday: [Serie]
  timer: Int
  createdOn: Date
  modifiedOn: Date
}

type DayForRutineDo {
  _id: ID
  numberDay: Int
  rutineDo: RutineDo
  serieforday: [SeriesForDay]
  createdOn: Date
  modifiedOn: Date
}

type RutineDo {
  _id: ID
  rutine: Routine
  teacher: User
  student: User
  rutineDay: [DayForRutineDo]
  createdOn: Date
  modifiedOn: Date
}

# LOS INPUTS
input InputUser {
  email: String
  firstName: String
  lastName: String
  phone: String
  nac: String
  gender: String
  profile: String
  weightStart: Float
  weightActual: Float
  password: String
  
}

input InputMuscle {
  image: String
  description: String
}

input InputExercise {
  name: String
  description: String
  muscle: [String]
  image: String
}

input InputSerie {
  weight: Float 
  exercise: String
  repeats: Int
  pause: Int
  numberSerie: Int
  numberDay: Int
  break: Int
  rutine: String
  timer: Int
}

input InputRoutine {
  description: String
  student: [String]
  teacher: String
  series: Int
  rutineDay: [String]
  start: String
  finish: String
  period: String
  days: Int
}

input InputSeriesForDay {
  serie: String
  doIt: Int
  dayForRutine: String
}

input InputDayForRutine {
  numberDay: Int
  serieforday: [String]
  rutine: String
  timer: Int
  createdOn: Date
  modifiedOn: Date
}

input InputDayForRutineDo {
  numberDay: Int
  serieforday: [String]
  rutineDo: String
  createdOn: Date
  modifiedOn: Date
}

input InputRutineDo {
  rutine: String
  teacher: String
  student: String
  rutineDay: [String]
}



# LAS QUERYS
type Query {
  getCurrentUser(token: String):User
  login(email: String): User
  getAllUsers: [User]
  getUserById(id: ID): User
  getUserByProfile(profile: String): [User]

  getAllMuscles: [Muscle]
  getMuscleById(id: ID): Muscle

  getAllExercises: [Exercise]
  getExerciseById(id: ID): Exercise
  getExerciseByMuscle(muscle: ID): [Exercise]

  getAllSeries: [Serie]
  getSerieByRutine(rutine: ID): [Serie]
  getSerieById(id: ID): Serie

  getAllRoutines: [Routine]
  getRoutineById(id: ID): Routine
  getRoutineByStudent(studentId: ID): [Routine]
  getRoutineByTeacher(teacherId: ID): [Routine]

  getAllRoutinesDo: [RutineDo]
  getRoutineDoById(id: ID): RutineDo
  getRoutineDoByRutine(rutine: ID): RutineDo
  getRoutineDoByTeacher(teacherId: ID): [RutineDo]
  getRoutineDoByStudent(studentId: ID): [RutineDo]

  getAllDayForRutine(rutine: ID): [DayForRutine]
  getDayForRutineById(id: ID): DayForRutine

  getAllDayForRutineDo(rutineDo: ID): [DayForRutineDo]
  getDayForRutineDoById(id: ID): DayForRutineDo

  getAllSeriesForDay(dayForRutine: ID): [SeriesForDay]
  getSeriesForDayById(id: ID): SeriesForDay
}

# LAS MUTATIONS
type Mutation {
  auth(email: String, password: String): String
  createUser(input: InputUser): User
  createMuscle(input: InputMuscle): Muscle
  createExercise(input: InputExercise): Exercise
  createSeries(input: InputSerie): Serie
  createRoutines(input: InputRoutine): Routine
  createRutineDoIt(input: InputRutineDo): RutineDo
  createDayForRutine(input: InputDayForRutine): DayForRutine
  createDayForRutineDo(input: InputDayForRutineDo): DayForRutineDo
  createSeriesForDay(input: InputSeriesForDay): SeriesForDay

  updateUser(_id: ID, input: InputUser): User
  updateMuscle(_id: ID, input: InputMuscle): Muscle
  updateExercise(_id: ID, input: InputExercise): Exercise
  updateSeries(_id: ID, input: InputSerie): Serie
  updateRoutines(_id: ID, input: InputRoutine): Routine
  updateRoutinesDo(_id: ID, input: InputRutineDo): RutineDo
  updateDayForRoutines(_id: ID, input: InputDayForRutine): DayForRutine
  updateDayForRoutinesDo(_id: ID, input: InputDayForRutineDo): DayForRutineDo
  updateSeriesForDay(_id: ID, input: InputSeriesForDay): SeriesForDay

  deleteUser(_id: ID): String
  deleteMuscle(_id: ID): String
  deleteExercise(_id: ID): String
  deleteSeries(_id: ID): String
  deleteRutines(_id: ID): String
  deleteRutinesDo(_id: ID): String
  deleteDayForRoutines(_id: ID): String
  deleteDayForRoutinesDo(_id: ID): String
  deleteSeriesForDay(_id: ID): String

}
